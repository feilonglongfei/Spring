<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
						http://www.springframework.org/schema/beans/spring-beans.xsd
						http://www.springframework.org/schema/context
						http://www.springframework.org/schema/context/spring-context.xsd
						http://www.springframework.org/schema/tx
						http://www.springframework.org/schema/tx/spring-tx.xsd
						http://www.springframework.org/schema/aop
						http://www.springframework.org/schema/aop/spring-aop.xsd">
						
	 <!-- spring datasource configuration -->
	<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="${mysql.driverClassName}"/>
	 	<property name="url" value="${mysql.jdbc.url}"/>
		<property name="username" value="${mysql.jdbc.username}"/>
		<property name="password" value="${mysql.jdbc.password}"/>
	</bean>
	
	 <!-- datasource from JNDI -->
	 <!-- jndiName should add prefix "java:comp/env/" -->
	<!-- <bean id="dataSource" class="org.springframework.jndi.JndiObjectFactoryBean">
	 	<property name="jndiName" value="${mysql.jndi.name}"></property>
	 </bean> -->
	 
	 <!-- JdbcTemplate -->
	<bean id="JdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="dataSource"></property>
	</bean>
	
	<!-- NamedParameterJdbcTemplate -->
	<bean id="namedParameterJdbcTemplate" class="org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate">
		<constructor-arg ref="dataSource"></constructor-arg>
	</bean>
	
	<!-- hibernateTemplate -->
	<bean id="sessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource"></property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">${mysql.hibernate.dialect}</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.format_sql">true</prop>
			</props>
		</property>
		<property name="packagesToScan">
			<list>
				<value>com.login.model</value>
			</list>
		</property>
	</bean>
	<bean id="hibernateTemplate" class="org.springframework.orm.hibernate5.HibernateTemplate">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	
	
	<!-- spring transaction manager configuration -->
	<bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
	</bean>
	
	<!-- spring annotation transaction configuration, apply @Transactional on public method-->
	<tx:annotation-driven transaction-manager="txManager"/> 
	
	<!-- spring declarative transaction configuration -->
	<tx:advice id="txAdvice" transaction-manager="txManager">
		<tx:attributes>
			<tx:method name="save*" propagation="REQUIRED" isolation="DEFAULT"/>
			<tx:method name="update*" propagation="REQUIRED"/>
			<tx:method name="delete*" propagation="REQUIRED"/>
   			<!-- <tx:method name="add*" propagation="REQUIRED"/> -->
			<tx:method name="get*" read-only="false" propagation="NOT_SUPPORTED"/>
   			<tx:method name="find*" read-only="false" propagation="NOT_SUPPORTED"/>
		</tx:attributes>
	</tx:advice>
	<aop:config>
		<aop:pointcut id="pointCut" expression="execution(* com.login.service.impl.*.*(..))"/>
	</aop:config>
 	<aop:config>
		<aop:advisor advice-ref="txAdvice" pointcut-ref="pointCut"/>
	</aop:config>
	
</beans>